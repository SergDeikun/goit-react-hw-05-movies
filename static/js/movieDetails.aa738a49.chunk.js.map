{"version":3,"file":"static/js/movieDetails.aa738a49.chunk.js","mappings":"yQAEaA,EAAYC,EAAAA,GAAAA,OAAH,8CAITC,EAAOD,EAAAA,GAAAA,IAAH,8FAMJE,EAAYF,EAAAA,GAAAA,IAAH,+CAITG,EAAOH,EAAAA,GAAAA,EAAH,kHAOJI,EAAYJ,EAAAA,GAAAA,GAAH,8EAMTK,EAAYL,EAAAA,GAAAA,GAAH,+CAITM,EAAWN,EAAAA,GAAAA,IAAH,0D,SCgDrB,EAhEqB,WACnB,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBZ,GAASa,MAAK,SAAAC,GAC/BV,EAASU,QAEV,CAACd,IAMJ,OACE,gCACGG,IACC,4BACE,SAACX,EAAD,CAAWuB,KAAK,SAASC,QARZ,WACnBX,GAAU,IAOJ,sBAIA,UAACX,EAAD,YACE,gBACEuB,IAAG,0CAAqCd,EAAMe,aAC9CC,IAAKhB,EAAMiB,SAGb,UAACzB,EAAD,YACE,wBAAKQ,EAAMiB,SACX,UAACxB,EAAD,yBAAkByB,KAAKC,MAA2B,GAArBnB,EAAMoB,cAAnC,QACA,sCACA,SAAC3B,EAAD,UAAOO,EAAMqB,YACb,oCACA,SAAC3B,EAAD,UACGM,EAAMsB,OAAOC,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACvB,OAAO,SAAC9B,EAAD,UAAqB8B,GAALD,eAM/B,UAAC5B,EAAD,YACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAM8B,GAAE,kBAAa7B,EAAb,SAAR,qBAEF,yBACE,SAAC,KAAD,CAAM6B,GAAE,kBAAa7B,EAAb,YAAR,iCAMV,SAAC,KAAD,S,0MC3EN8B,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,oGACTF,GAAAA,CAAM,+BAAD,OACKC,EADL,2BADI,cAC1BE,EAD0B,yBAKzBA,EAASnB,MALgB,2CAAH,qDAQlBoB,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,GAAAA,CAAM,wBAAD,OACFC,EADE,kBACWI,EADX,+CADG,cACzBF,EADyB,yBAKxBA,EAASnB,MALe,2CAAH,sDAUjBF,EAAkB,mCAAG,WAAMe,GAAN,uFACTG,GAAAA,CAAM,UAAD,OAAWH,EAAX,oBAAyBI,EAAzB,oBADI,cAC1BE,EAD0B,yBAGzBA,EAASnB,MAHgB,2CAAH,sDAMlBsB,EAAc,mCAAG,WAAMT,GAAN,uFACLG,GAAAA,CAAM,UAAD,OAChBH,EADgB,4BACMI,EADN,oBADA,cACtBE,EADsB,yBAIrBA,EAASnB,MAJY,2CAAH,sDAOduB,EAAiB,mCAAG,WAAMV,GAAN,uFACRG,GAAAA,CAAM,UAAD,OAChBH,EADgB,4BACMI,EADN,2BADG,cACzBE,EADyB,yBAIxBA,EAASnB,MAJe,2CAAH","sources":["pages/movieDetails/movieDetails.styled.js","pages/movieDetails/movieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GoBackBtn = styled.button`\n  margin-left: 15px;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  padding: 15px;\n  border-bottom: 1px solid gray;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-left: 10px;\n`;\n\nexport const Text = styled.p`\n  font-weight: 400;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n  font-size: 16px;\n`;\n\nexport const GenreList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const GenreItem = styled.li`\n  margin-right: 10px;\n`;\n\nexport const WrapLink = styled.div`\n  border-bottom: 1px solid gray;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\n// import { IoIosArrowRoundBack } from 'react-icons/io';\nimport { Link } from 'react-router-dom';\n\nimport { fetchMmovieDetails } from '../../services/api';\nimport {\n  Wrap,\n  GoBackBtn,\n  MovieInfo,\n  Text,\n  GenreList,\n  GenreItem,\n  WrapLink,\n} from './movieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    fetchMmovieDetails(movieId).then(data => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  return (\n    <>\n      {movie && (\n        <div>\n          <GoBackBtn type=\"button\" onClick={handleGoBack}>\n            Go back\n          </GoBackBtn>\n\n          <Wrap>\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              alt={movie.title}\n            />\n\n            <MovieInfo>\n              <h2>{movie.title}</h2>\n              <Text>User Score {Math.round(movie.vote_average * 10)}%</Text>\n              <h3>Overview</h3>\n              <Text>{movie.overview}</Text>\n              <h3>Genres</h3>\n              <GenreList>\n                {movie.genres.map(({ id, name }) => {\n                  return <GenreItem key={id}>{name}</GenreItem>;\n                })}\n              </GenreList>\n            </MovieInfo>\n          </Wrap>\n\n          <WrapLink>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n              </li>\n              <li>\n                <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n              </li>\n            </ul>\n          </WrapLink>\n        </div>\n      )}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'ad1bc7edbb361d4c2586895572eb3a0c';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios(\n    `/trending/movie/day?api_key=${KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n\nexport const fetchSearchMovies = async searchQuery => {\n  const response = await axios(\n    `search/movie?api_key=${KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\n//\n\nexport const fetchMmovieDetails = async id => {\n  const response = await axios(`/movie/${id}?api_key=${KEY}&language=en-US`);\n\n  return response.data;\n};\n\nexport const fetchCastMovie = async id => {\n  const response = await axios(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsMovie = async id => {\n  const response = await axios(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["GoBackBtn","styled","Wrap","MovieInfo","Text","GenreList","GenreItem","WrapLink","movieId","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","console","log","useEffect","fetchMmovieDetails","then","data","type","onClick","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","id","name","to","axios","KEY","fetchPopularMovies","response","fetchSearchMovies","searchQuery","fetchCastMovie","fetchReviewsMovie"],"sourceRoot":""}