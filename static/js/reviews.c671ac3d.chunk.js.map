{"version":3,"file":"static/js/reviews.c671ac3d.chunk.js","mappings":"wPAEaA,EAAcC,EAAAA,GAAAA,GAAH,6CAIXC,EAASD,EAAAA,GAAAA,EAAH,6CAINE,EAAOF,EAAAA,GAAAA,EAAH,6F,SCejB,EArBoB,SAAC,GAAc,IAAZG,EAAW,EAAXA,KACrB,OACE,+BACE,SAACJ,EAAD,UACGI,EAAKC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACvB,OACE,2BACE,UAACN,EAAD,sBAAiBK,MACjB,SAACJ,EAAD,UAAOK,MAFAF,WCiBrB,EArBgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACjCJ,EAAWI,QAEZ,CAACR,KAGF,8BACGG,EAAQM,QACP,SAAC,EAAD,CAAad,KAAMQ,KAEnB,0E,0MCpBRO,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,oGACTF,GAAAA,CAAM,+BAAD,OACKC,EADL,2BADI,cAC1BE,EAD0B,yBAKzBA,EAASlB,MALgB,2CAAH,qDAQlBmB,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,GAAAA,CAAM,wBAAD,OACFC,EADE,kBACWI,EADX,+CADG,cACzBF,EADyB,yBAKxBA,EAASlB,MALe,2CAAH,sDAQjBqB,EAAkB,mCAAG,WAAMnB,GAAN,uFACTa,GAAAA,CAAM,UAAD,OAAWb,EAAX,oBAAyBc,EAAzB,oBADI,cAC1BE,EAD0B,yBAGzBA,EAASlB,MAHgB,2CAAH,sDAMlBsB,EAAc,mCAAG,WAAMpB,GAAN,uFACLa,GAAAA,CAAM,UAAD,OAChBb,EADgB,4BACMc,EADN,oBADA,cACtBE,EADsB,yBAIrBA,EAASlB,MAJY,2CAAH,sDAOdW,EAAiB,mCAAG,WAAMT,GAAN,uFACRa,GAAAA,CAAM,UAAD,OAChBb,EADgB,4BACMc,EADN,2BADG,cACzBE,EADyB,yBAIxBA,EAASlB,MAJe,2CAAH","sources":["pages/reviews/reviews.styled.js","components/reviewsInfo/reviewsInfo.jsx","pages/reviews/reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n`;\n\nexport const Author = styled.p`\n  font-weight: 600;\n`;\n\nexport const Text = styled.p`\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n  font-size: 16px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { ReviewsList, Author, Text } from '../../pages/reviews/reviews.styled';\n\nconst ReviewsInfo = ({ data }) => {\n  return (\n    <>\n      <ReviewsList>\n        {data.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <Author>Author: {author}</Author>\n              <Text>{content}</Text>\n            </li>\n          );\n        })}\n      </ReviewsList>\n    </>\n  );\n};\n\nReviewsInfo.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default ReviewsInfo;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchReviewsMovie } from 'services/api';\nimport ReviewsInfo from 'components/reviewsInfo/reviewsInfo';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviewsMovie(movieId).then(({ results }) => {\n      setReviews(results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ReviewsInfo data={reviews} />\n      ) : (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'ad1bc7edbb361d4c2586895572eb3a0c';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios(\n    `/trending/movie/day?api_key=${KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n\nexport const fetchSearchMovies = async searchQuery => {\n  const response = await axios(\n    `search/movie?api_key=${KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const fetchMmovieDetails = async id => {\n  const response = await axios(`/movie/${id}?api_key=${KEY}&language=en-US`);\n\n  return response.data;\n};\n\nexport const fetchCastMovie = async id => {\n  const response = await axios(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsMovie = async id => {\n  const response = await axios(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["ReviewsList","styled","Author","Text","data","map","id","author","content","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviewsMovie","then","results","length","axios","KEY","fetchPopularMovies","response","fetchSearchMovies","searchQuery","fetchMmovieDetails","fetchCastMovie"],"sourceRoot":""}