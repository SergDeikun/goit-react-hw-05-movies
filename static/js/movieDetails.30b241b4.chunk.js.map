{"version":3,"file":"static/js/movieDetails.30b241b4.chunk.js","mappings":"sPAMaA,GAJYC,EAAAA,GAAAA,OAAH,8CAIFA,EAAAA,GAAAA,IAAH,+FAMJC,EAAYD,EAAAA,GAAAA,IAAH,+CAITE,EAAOF,EAAAA,GAAAA,EAAH,kHAOJG,EAAYH,EAAAA,GAAAA,GAAH,8EAMTI,EAAYJ,EAAAA,GAAAA,GAAH,+C,SCYtB,EA/BkB,SAAC,GAAc,IAAZK,EAAW,EAAXA,KACXC,EAAuDD,EAAvDC,YAAaC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,aAAcC,EAAqBJ,EAArBI,SAAUC,EAAWL,EAAXK,OACpD,OACE,+BACE,UAACX,EAAD,YACE,gBACEY,IAAG,0CAAqCL,GACxCM,IAAKL,KAGP,UAACN,EAAD,YACE,wBAAKM,KACL,UAACL,EAAD,yBAAkBW,KAAKC,MAAqB,GAAfN,GAA7B,QACA,sCACA,SAACN,EAAD,UAAOO,KACP,oCACA,SAACN,EAAD,UACGO,EAAOK,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACjB,OAAO,SAACb,EAAD,UAAqBa,GAALD,iB,SC1BxBE,EAAWlB,EAAAA,GAAAA,IAAH,0DCwBrB,EAtBuB,SAAC,GAAiB,IAAfmB,EAAc,EAAdA,QACxB,OACE,+BACE,UAACD,EAAD,YACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAME,GAAE,kBAAaD,EAAb,SAAR,qBAEF,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAb,YAAR,gC,UCyBZ,EA/BqB,WACnB,IAAQA,GAAYE,EAAAA,EAAAA,MAAZF,QACR,GAA0BG,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBT,GAASU,MAAK,SAAAxB,GAC/BmB,EAASnB,QAEV,CAACc,IAEJ,IAAMW,EAAe,WACnBL,GAAU,IAGZ,OACE,gCACGF,IACC,4BACE,mBAAQQ,KAAK,SAASC,QAASF,EAA/B,sBAGA,SAAC,EAAD,CAAWzB,KAAMkB,EAAOS,QAASF,KACjC,SAAC,EAAD,CAAgBX,QAASA,QAG7B,SAAC,KAAD,S,0MCjCNc,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,oGACTF,GAAAA,CAAM,+BAAD,OACKC,EADL,2BADI,cAC1BE,EAD0B,yBAKzBA,EAAS/B,MALgB,2CAAH,qDAQlBgC,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,GAAAA,CAAM,wBAAD,OACFC,EADE,kBACWI,EADX,+CADG,cACzBF,EADyB,yBAKxBA,EAAS/B,MALe,2CAAH,sDAQjBuB,EAAkB,mCAAG,WAAMZ,GAAN,uFACTiB,GAAAA,CAAM,UAAD,OAAWjB,EAAX,oBAAyBkB,EAAzB,oBADI,cAC1BE,EAD0B,yBAGzBA,EAAS/B,MAHgB,2CAAH,sDAMlBkC,EAAc,mCAAG,WAAMvB,GAAN,uFACLiB,GAAAA,CAAM,UAAD,OAChBjB,EADgB,4BACMkB,EADN,oBADA,cACtBE,EADsB,yBAIrBA,EAAS/B,MAJY,2CAAH,sDAOdmC,EAAiB,mCAAG,WAAMxB,GAAN,uFACRiB,GAAAA,CAAM,UAAD,OAChBjB,EADgB,4BACMkB,EADN,2BADG,cACzBE,EADyB,yBAIxBA,EAAS/B,MAJe,2CAAH","sources":["components/movieCard/movieCard.styled.js","components/movieCard/movieCard.jsx","components/additionalInfo/additionalInfo.styled.js","components/additionalInfo/additionalinfo.jsx","pages/movieDetails/movieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GoBackBtn = styled.button`\n  margin-left: 15px;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  padding: 15px;\n  border-bottom: 1px solid gray;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-left: 10px;\n`;\n\nexport const Text = styled.p`\n  font-weight: 400;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n  font-size: 16px;\n`;\n\nexport const GenreList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const GenreItem = styled.li`\n  margin-right: 10px;\n`;\n\n// export const WrapLink = styled.div`\n//   border-bottom: 1px solid gray;\n// `;\n","import PropTypes from 'prop-types';\n\nimport {\n  Wrap,\n  MovieInfo,\n  Text,\n  GenreList,\n  GenreItem,\n} from './movieCard.styled';\n\nconst MovieCard = ({ data }) => {\n  const { poster_path, title, vote_average, overview, genres } = data;\n  return (\n    <>\n      <Wrap>\n        <img\n          src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n          alt={title}\n        />\n\n        <MovieInfo>\n          <h2>{title}</h2>\n          <Text>User Score {Math.round(vote_average * 10)}%</Text>\n          <h3>Overview</h3>\n          <Text>{overview}</Text>\n          <h3>Genres</h3>\n          <GenreList>\n            {genres.map(({ id, name }) => {\n              return <GenreItem key={id}>{name}</GenreItem>;\n            })}\n          </GenreList>\n        </MovieInfo>\n      </Wrap>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const WrapLink = styled.div`\n  border-bottom: 1px solid gray;\n`;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { WrapLink } from './additionalInfo.styled';\n\nconst AdditionalInfo = ({ movieId }) => {\n  return (\n    <>\n      <WrapLink>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </WrapLink>\n    </>\n  );\n};\n\nAdditionalInfo.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default AdditionalInfo;\n","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport MovieCard from 'components/movieCard/movieCard';\nimport AdditionalInfo from 'components/additionalInfo/additionalinfo';\n\nimport { fetchMmovieDetails } from '../../services/api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMmovieDetails(movieId).then(data => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  return (\n    <>\n      {movie && (\n        <div>\n          <button type=\"button\" onClick={handleGoBack}>\n            Go back\n          </button>\n          <MovieCard data={movie} onClick={handleGoBack} />\n          <AdditionalInfo movieId={movieId} />\n        </div>\n      )}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'ad1bc7edbb361d4c2586895572eb3a0c';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios(\n    `/trending/movie/day?api_key=${KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n\nexport const fetchSearchMovies = async searchQuery => {\n  const response = await axios(\n    `search/movie?api_key=${KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const fetchMmovieDetails = async id => {\n  const response = await axios(`/movie/${id}?api_key=${KEY}&language=en-US`);\n\n  return response.data;\n};\n\nexport const fetchCastMovie = async id => {\n  const response = await axios(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsMovie = async id => {\n  const response = await axios(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["Wrap","styled","MovieInfo","Text","GenreList","GenreItem","data","poster_path","title","vote_average","overview","genres","src","alt","Math","round","map","id","name","WrapLink","movieId","to","useParams","useState","movie","setMovie","navigate","useNavigate","useEffect","fetchMmovieDetails","then","handleGoBack","type","onClick","axios","KEY","fetchPopularMovies","response","fetchSearchMovies","searchQuery","fetchCastMovie","fetchReviewsMovie"],"sourceRoot":""}