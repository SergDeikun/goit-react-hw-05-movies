{"version":3,"file":"static/js/reviews.e61a54db.chunk.js","mappings":"wPAEaA,EAAcC,EAAAA,GAAAA,GAAH,6CAIXC,EAASD,EAAAA,GAAAA,EAAH,6CAINE,EAAOF,EAAAA,GAAAA,EAAH,6F,SC0BjB,EA9BgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACjCJ,EAAWI,QAEZ,CAACR,KAGF,8BACGG,EAAQM,QACP,SAACb,EAAD,UACGO,EAAQO,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,UAACf,EAAD,sBAAiBc,MACjB,SAACb,EAAD,UAAOc,MAFAF,SAQf,SAACZ,EAAD,2D,0MC7BRe,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,oGACTF,GAAAA,CAAM,+BAAD,OACKC,EADL,2BADI,cAC1BE,EAD0B,yBAKzBA,EAASC,MALgB,2CAAH,qDAQlBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,GAAAA,CAAM,wBAAD,OACFC,EADE,kBACWK,EADX,+CADG,cACzBH,EADyB,yBAKxBA,EAASC,MALe,2CAAH,sDAUjBG,EAAkB,mCAAG,WAAMV,GAAN,uFACTG,GAAAA,CAAM,UAAD,OAAWH,EAAX,oBAAyBI,EAAzB,oBADI,cAC1BE,EAD0B,yBAGzBA,EAASC,MAHgB,2CAAH,sDAMlBI,EAAc,mCAAG,WAAMX,GAAN,uFACLG,GAAAA,CAAM,UAAD,OAChBH,EADgB,4BACMI,EADN,oBADA,cACtBE,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdZ,EAAiB,mCAAG,WAAMK,GAAN,uFACRG,GAAAA,CAAM,UAAD,OAChBH,EADgB,4BACMI,EADN,2BADG,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH","sources":["pages/reviews/reviews.styled.js","pages/reviews/reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n`;\n\nexport const Author = styled.p`\n  font-weight: 600;\n`;\n\nexport const Text = styled.p`\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n  font-size: 16px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchReviewsMovie } from 'services/api';\nimport { ReviewsList, Author, Text } from './reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviewsMovie(movieId).then(({ results }) => {\n      setReviews(results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <Author>Author: {author}</Author>\n                <Text>{content}</Text>\n              </li>\n            );\n          })}\n        </ReviewsList>\n      ) : (\n        <Text>We don't have any reviews for this movie</Text>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'ad1bc7edbb361d4c2586895572eb3a0c';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios(\n    `/trending/movie/day?api_key=${KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n\nexport const fetchSearchMovies = async searchQuery => {\n  const response = await axios(\n    `search/movie?api_key=${KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\n//\n\nexport const fetchMmovieDetails = async id => {\n  const response = await axios(`/movie/${id}?api_key=${KEY}&language=en-US`);\n\n  return response.data;\n};\n\nexport const fetchCastMovie = async id => {\n  const response = await axios(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsMovie = async id => {\n  const response = await axios(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["ReviewsList","styled","Author","Text","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviewsMovie","then","results","length","map","id","author","content","axios","KEY","fetchPopularMovies","response","data","fetchSearchMovies","searchQuery","fetchMmovieDetails","fetchCastMovie"],"sourceRoot":""}