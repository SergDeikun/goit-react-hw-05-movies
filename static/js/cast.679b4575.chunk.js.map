{"version":3,"file":"static/js/cast.679b4575.chunk.js","mappings":"sPAEaA,EAAWC,EAAAA,GAAAA,GAAH,6CAGRC,EAAOD,EAAAA,GAAAA,EAAH,kH,SCoCjB,EAnCa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeN,GAASO,MAAK,YAAe,IAAZJ,EAAW,EAAXA,KAC9BC,EAAQD,QAET,CAACH,KAGF,8BACGG,IACC,SAACN,EAAD,UACGM,EAAKK,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,2BACE,gBACEC,IACEH,GAAY,0CACuBA,GAErCI,IAAKH,KAEP,SAACZ,EAAD,UAAOY,KACP,UAACZ,EAAD,yBAAkBa,OATXH,Y,0MCrBvBM,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,oGACTF,GAAAA,CAAM,+BAAD,OACKC,EADL,2BADI,cAC1BE,EAD0B,yBAKzBA,EAASC,MALgB,2CAAH,qDAQlBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,GAAAA,CAAM,wBAAD,OACFC,EADE,kBACWK,EADX,+CADG,cACzBH,EADyB,yBAKxBA,EAASC,MALe,2CAAH,sDAUjBG,EAAkB,mCAAG,WAAMb,GAAN,uFACTM,GAAAA,CAAM,UAAD,OAAWN,EAAX,oBAAyBO,EAAzB,oBADI,cAC1BE,EAD0B,yBAGzBA,EAASC,MAHgB,2CAAH,sDAMlBb,EAAc,mCAAG,WAAMG,GAAN,uFACLM,GAAAA,CAAM,UAAD,OAChBN,EADgB,4BACMO,EADN,oBADA,cACtBE,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdI,EAAiB,mCAAG,WAAMd,GAAN,uFACRM,GAAAA,CAAM,UAAD,OAChBN,EADgB,4BACMO,EADN,2BADG,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH","sources":["pages/cast/cast.styled.js","pages/cast/cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n`;\nexport const Text = styled.p`\n  font-weight: 600;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n  font-size: 16px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchCastMovie } from 'services/api';\nimport { CastList, Text } from './cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchCastMovie(movieId).then(({ cast }) => {\n      setCast(cast);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <CastList>\n          {cast.map(({ id, profile_path, name, character }) => {\n            return (\n              <li key={id}>\n                <img\n                  src={\n                    profile_path &&\n                    `https://image.tmdb.org/t/p/w200/${profile_path}`\n                  }\n                  alt={name}\n                />\n                <Text>{name}</Text>\n                <Text>Character: {character}</Text>\n              </li>\n            );\n          })}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'ad1bc7edbb361d4c2586895572eb3a0c';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios(\n    `/trending/movie/day?api_key=${KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n\nexport const fetchSearchMovies = async searchQuery => {\n  const response = await axios(\n    `search/movie?api_key=${KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\n//\n\nexport const fetchMmovieDetails = async id => {\n  const response = await axios(`/movie/${id}?api_key=${KEY}&language=en-US`);\n\n  return response.data;\n};\n\nexport const fetchCastMovie = async id => {\n  const response = await axios(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsMovie = async id => {\n  const response = await axios(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["CastList","styled","Text","movieId","useParams","useState","cast","setCast","useEffect","fetchCastMovie","then","map","id","profile_path","name","character","src","alt","axios","KEY","fetchPopularMovies","response","data","fetchSearchMovies","searchQuery","fetchMmovieDetails","fetchReviewsMovie"],"sourceRoot":""}